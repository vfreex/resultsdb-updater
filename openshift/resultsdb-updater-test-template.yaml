# Resultsdb_updater template
#
# To create an environment from the template, process and apply it:
#   oc process -f openshift/resultsdb-updater-test-template.yaml -p TEST_ID=123 | oc apply -f -
# To clean up the environment, use a selector on the environment label:
#   oc delete all -l environment=test-123
# Or use the app label to delete things related to resultsdb-updater:
#   oc delete all -l app=resultsdb-updater

---
apiVersion: v1
kind: Template
metadata:
  name: resultsdb-updater-test-template
parameters:
- name: TEST_ID
  displayName: Test id
  description: Short unique identifier for this test run (e.g. Jenkins job number)
  required: true
  value: "9999"
- name: RESULTSDB_UPDATER_IMAGE
  displayName: ResultsDB Updater container image
  description: Image to be used for ResultsDB Updater deployement
  value: docker-registry.engineering.redhat.com/yuxzhu/resultsdb-updater:latest
  required: true
- name: RESULTSDB_API_URL
  displayname: Resultsdb API URL
  description: API URL for Resultsdb
  value: https://resultsdb-test-9999-api-yuxzhu.cloud.paas.upshift.redhat.com/api/v2.0
  required: true
- name: RESULTSDB_UPDATER_USERNAME
  displayName: ResultsDB updater user name
  description: ResultsDB updater user name to connect to the message bus
  value: resultsdb-updater
  required: true
- name: RESULTSDB_UPDATER_PASSWORD
  displayName: Resultsdb updater user password
  description: Resultsdb updater user password to connect to the message bus
  generate: expression
  from: "[\\w]{32}"
- name: STOMP_URI
  displayName: Messagebus URI
  description: Messagebus URI
  required: true
  value: umb-test-9999-umb:61613
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "resultsdb-updater-test-${TEST_ID}-secret"
    labels:
      app: "resultsdb-updater"
      environment: "test-${TEST_ID}"
  stringData:
    resultsdb-updater.py: |-
      import logging
      config = {
        'ciconsumer': True,
        'zmq_enabled': False,
        'endpoints': {},
        'validate_signatures': False,
        'stomp_heartbeat': 1000,
        'stomp_uri': '${STOMP_URI}',
        # 'stomp_user': '${RESULTSDB_UPDATER_USERNAME}',
        # 'stomp_pass': '${RESULTSDB_UPDATER_PASSWORD}',
        'stomp_ssl_crt': '/etc/resultsdb/resultsdb.pem',
        'stomp_ssl_key': '/etc/resultsdb/resultsdb-key.pem',
        'resultsdb-updater.log_level': logging.DEBUG,
        'resultsdb-updater.resultsdb_api_url': '${RESULTSDB_API_URL}',
        # TODO make certificate verification work
        'resultsdb-updater.resultsdb_api_ca': False,
        'resultsdb-updater.resultsdb_user': 'resultsdb-updater',
        'resultsdb-updater.resultsdb_pass': 'password',
        'resultsdb-updater.topics': [
            "/queue/Consumer.resultsdb.queue.VirtualTopic.Test",
            "/queue/Consumer.resultsdb.queue.VirtualTopic.eng.ci.container-image.test.complete",
        ],
        'moksha.blocking_mode': True,
      }
- apiVersion: v1
  kind: Secret
  metadata:
    name: "resultsdb-updater-test-${TEST_ID}-certs"
    labels:
      app: "resultsdb-updater"
      environment: "test-${TEST_ID}"
  data:
    resultsdb.pem: |-
      LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ0akNDQXNxZ0F3SUJBZ0lVRXNrSlZOdHdFZytPV2lOMFRxSWtaQXJIOGxzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2RURUxNQWtHQTFVRUJoTUNWVk14RmpBVUJnTlZCQWdURFZOaGJpQkdjbUZ1WTJselkyOHhDekFKQmdOVgpCQWNUQWtOQk1SZ3dGZ1lEVlFRS0V3OU5lU0JEYjIxd1lXNTVJRTVoYldVeEV6QVJCZ05WQkFzVENrOXlaeUJWCmJtbDBJREl4RWpBUUJnTlZCQU1UQ1UxNUlHOTNiaUJEUVRBZUZ3MHhPREV5TVRrd09ESTBNREJhRncweE9URXkKTVRrd09ESTBNREJhTUVneEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUlFd0pEUVRFV01CUUdBMVVFQnhNTgpVMkZ1SUVaeVlXNWphWE5qYnpFVU1CSUdBMVVFQXhNTFpYaGhiWEJzWlM1dVpYUXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG9idGZzWXNNcThlb3VNRWQvQVZuNVpQVk8weTArbkxNeFZEcFoKRXR1bmxMOVNRajV5Q2RnZllobTEzRFAxeUlGd3RlV2t0cFkyaWRnMTJFMm5hcTBBZzVQcmlJbXp2M0prV1BWUQpOUVpXak43eXZKakJ6Vi80OHVES0dybCt0dXJ0dzA2ejdOYkxEenpNZUxabGVtbmVjWDh2eExmUUNRL3RHU3NrCmRqVHNVQ0ROYnJGWTNERDl3Z1dZUDlEZHpmbTdaYmIvNHhxZzlSNXBKcno5c2ZoemRhd2wyOFM2SG9HcWZZcHAKYmZhWHdKcFlPY1lSUmNZa1ZQNldYelp0TTBma1czQ3dXM3o2R2xiaU9TdlBnVXM4WEx4SGx1WnBTMmxtYmNQNgpzTVJZRmFDc01SQVF3aVdGblpOeGUyaTVPb3hRdkpzQzNHTkFhakRobmdSM0crUmxBZ01CQUFHamdaWXdnWk13CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVExQUUVmdEZLWm9NQnQ5V2ZwajdacHVZcjlQVEFmQmdOVgpIU01FR0RBV2dCUUthaWVabkVWcTNoM2ZmQ3JwRlorTmJOSDNaekFVQmdOVkhSRUVEVEFMZ2dseVpYTjFiSFJ6ClpHSXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQnFtZkNDVDRkc285YnhmbmZaa0VScWpuWkgxYTFwREpmWU8Kc2ZLZnIyU3VhUmlzUWo1ZCtlL042RG5GMVFKaWU3WGlidm96dFFRM2hTdjhUdWNsbXBheEQ4enJLS04xOExiMApTbWV5M3V3WEhlazg1MTZiN3JBQmZxeXVIVW5oRFkvUit2Ny84YlorNnA5SFlEYUJlL3hOQi9qMVFsRHJoNkx3CnFkcEFoMDZwY2JDTlcyUm9tTGxYNHFjTloyT2FaSjd6NjdoNC91YzhYOVNkd1FITkhKNUdDVzNFYlBTbnl4MEoKU2wrV1RsQXRHRVBUc2FKYytOWkZiMC85Q3dnSWhOM1QwWW13R2gwNnhLK0ZzZHpBbnpORVVFQW12cW8xWSs4ZgpZQUREWWMrOFJXR0p5UFRadzA1VGVqS0RVUGpSdER6emZqSGVxWHZqbUVadXBTbzg5NWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    resultsdb-key.pem: |-
      LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNkc3WDdHTERLdkhxTGpCSGZ3RlorV1QxVHRNdFBweXpNVlE2V1JMYnA1Uy9Va0krCmNnbllIMkladGR3ejljaUJjTFhscExhV05vbllOZGhOcDJxdEFJT1Q2NGlKczc5eVpGajFVRFVHVm96ZThyeVkKd2MxZitQTGd5aHE1ZnJicTdjTk9zK3pXeXc4OHpIaTJaWHBwM25GL0w4UzMwQWtQN1JrckpIWTA3RkFnelc2eApXTnd3L2NJRm1EL1EzYzM1dTJXMi8rTWFvUFVlYVNhOC9iSDRjM1dzSmR2RXVoNkJxbjJLYVczMmw4Q2FXRG5HCkVVWEdKRlQrbGw4MmJUTkg1RnR3c0Z0OCtocFc0amtyejRGTFBGeThSNWJtYVV0cFptM0QrckRFV0JXZ3JERVEKRU1JbGhaMlRjWHRvdVRxTVVMeWJBdHhqUUdvdzRaNEVkeHZrWlFJREFRQUJBb0lCQURiMFZocnVzdVJKZEN2ZApnRm4zOE5UMVdNWjlTWG8vUkdMS1hrMUhGeVlGRmtNVnBId0Q5ZFJkdG1SNEh0VGl4aS9tNGRmU3o2c3ZaaTQ4CjZRZEhRb1lYbGZhZlBxZUFBVVRXZjVHcUo4aDQ0QkdXSTZ2V3FmVkxQM2lwWHVnbHlWL1R5SnpqeDFrVlRqT3QKNnJvTmVsQjhseXl0SHlTUnIvRkgvUnBPMUc1MmhCSHR2RzBiSzJNR3h5YkZmNC9KQTUrQ2JRa1lRME9ua0hEbQp0dm9nZGRUaUV5NVBkemlmV0NINGRjOUhqUUg5QWlaR3lPSHZvV29XRjlrL2VuTkZFT3BQQWJtVTFZbytDMTlXCmJpSkVFL1BOaUp4R3lYNU1mMWxHNnRab0s2Uyt6NDA0cmdXb0FxWWE4OWsySXl1RUwxYjBqWTdXQmtWRGRad3kKcm1idC9BRUNnWUVBN0ErdVcvMlFkb2crdVVrNXBBcEJXaHRGekdHcUhoSnM2d3U3SzBNcjkzSnlPRVhFV3hxagpzeUQ1QjdBc25GWWFWVEE4aW1PajMxcml6VXJ3NEVRVW9jbmNqRUVBS0Q3cTdGaHV1SmNDUmtoTkhVYjRiY3ZZClQ5UkVNS0JZNzB3V3JEZW5TdlJKK0tHT053UWsvYjdTek8yV0pHY0ZGODFUdEtZR0w1SmpEMlVDZ1lFQS9CQzEKY0o2Z243Mlg0WUZCVVFEdzFnRm05MTB3Y0dQY0pRUkFWYWpCY3VXd1JCci9EUm54cGxHWlpidVlhbmk3VlMxawpqa0hTU1gyaklWUk1NUkw0OFozczE1SlN6Y3lXMUpFUVF4RE80V2F5QlN5YjdqOFVSY1VDMUxUWTlvM0R0RHhjCmczKzYxWnNvU3UyY1E2bXM4UjFWRkJGL1NIektWd2c1R3F1RXNRRUNnWUFoZ3pobHB1SFRjaFExaWNlOUdoZWQKQ3pJbGlkZjAzUGpKaGFqVXczeUNiS1Q2aUMwUUlnQUxkaXJraElaUXk0aUJmNCtZdGZ5VndQbGgyN25Hbk9Pdwo5RTl6T2Vjano0cmFjdE9GTVNzSmYwb3pWZGYrL21sL0s4dGllK0VrVjlFQU1nWjJCYWhhdTlUTXlySFZ0RG1KCkRsRzZhVVczMDFhRzF1c1o1ZFphWVFLQmdRQ0NjVGNrQjhNQng0Q2d2MTRJeUY3WnNMSVRVdE50WmhBWHkrSnIKTWNDaWNBRE96ZFd0ZHY2WjNtSnV4aXp5OUhXbGQ2OHcreGtTMVFTbGk5VStGQjVtRXg3czFCa3J6VE5FMzZrMQp1NjREOFR3dzkwdmVlQ0JLbHRDSE9PdUtkQVNSOGliQ0draWFvQWV5OXRIR0pqbU1NV3pFek9VOG91K25LR2M4CnlRUUxBUUtCZ0NNSU9DcDg0QnpZbkNIb1NjbVRXRjYzT2FvL2FVTEpvbXBiYjlWcEpSaTlEV09JWFBsSnZZdUEKaGFtUEpRK2p6c1lvTEJJUDFNT29ubGEzcDNNcVBjcG1lZXJJUUtlZ21iMDVERTVGRnhhQXlXWWFsTUVyYnp2OQoyOVRvVDBuTjc3bW1EejhVdzZMb0dOWW1waDlUTmRpam03TGRkNnVoTytsOGVXOHNNMXFVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "resultsdb-updater-test-${TEST_ID}"
    labels:
      app: "resultsdb-updater"
      environment: "test-${TEST_ID}"
  spec:
    replicas: 1
    selector:
      app: "resultsdb-updater"
      environment: "test-${TEST_ID}"
    template:
      metadata:
        labels:
          app: "resultsdb-updater"
          environment: "test-${TEST_ID}"
      spec:
        containers:
        - name: resultsdb-updater
          image: "${RESULTSDB_UPDATER_IMAGE}"
          imagePullPolicy: Always
          volumeMounts:
          - name: resultsdb-updater-config-volume
            mountPath: /etc/fedmsg.d
            readOnly: true
          - name: resultsdb-updater-certs
            mountPath: /etc/resultsdb
            readOnly: true
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 300m
              memory: 384Mi
          # TODO: readinessProbe and livenessProbe (is it possible?)
        volumes:
        - name: resultsdb-updater-config-volume
          secret:
            secretName: "resultsdb-updater-test-${TEST_ID}-secret"
            items:
            - key: resultsdb-updater.py
              path: updater.py
        - name: resultsdb-updater-certs
          secret:
            secretName: "resultsdb-updater-test-${TEST_ID}-certs"
            items:
            - key: resultsdb.pem
              path: resultsdb.pem
            - key: resultsdb-key.pem
              path: resultsdb-key.pem
    triggers:
    - type: ConfigChange
